My build of dwm 6.2
===========================

Patches
------------
- ru_gaps (window gaps)
- autostart (autostart script for the wm)
- urgent (urgent window border color)
- alpha (transparency for the status bar and borders)
- pertag (different layouts per tag)

Modifications
------------
- pywal colors
- disabled/changed a few keybindings
- dwm.desktop: copy to /usr/share/xsessions/ so that dwm shows up on the login manager

Configuration (config.def.h)
------------
1) Edit config.def.h and put your home path in the pywal include

    #include "/home/USERNAME/.cache/wal/colors-wal-dwm.h"

2) Alpha variables are baralpha, borderalpha and fgalpha.

3) Place your autostart script in ~/.dwm/autostart.sh

4) When you want to compile from scratch, remember to delete config.h too (auto-generated file). Put your
custom config in config.def.h.



=== Original README file ===

dwm - dynamic window manager
============================
dwm is an extremely fast, small, and dynamic window manager for X.


Requirements
------------
In order to build dwm you need the Xlib header files.


Installation
------------
Edit config.mk to match your local setup (dwm is installed into
the /usr/local namespace by default).

Afterwards enter the following command to build and install dwm (if
necessary as root):

    make clean install


Running dwm
-----------
Add the following line to your .xinitrc to start dwm using startx:

    exec dwm

In order to connect dwm to a specific display, make sure that
the DISPLAY environment variable is set correctly, e.g.:

    DISPLAY=foo.bar:1 exec dwm

(This will start dwm on display :1 of the host foo.bar.)

In order to display status info in the bar, you can do something
like this in your .xinitrc:

    while xsetroot -name "`date` `uptime | sed 's/.*,//'`"
    do
    	sleep 1
    done &
    exec dwm


Configuration
-------------
The configuration of dwm is done by creating a custom config.h
and (re)compiling the source code.
